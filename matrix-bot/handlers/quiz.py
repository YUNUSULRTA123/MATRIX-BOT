from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler, MessageHandler, filters

QUESTION, ANSWER = range(2)

quiz_questions = [
    {
        "q": "–ù–∞–∑–æ–≤–∏—Ç–µ –≥–æ–¥ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –î–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –°–®–ê.",
        "a": ["1776"]
    },
    {
        "q": "–ß—Ç–æ —Ç–∞–∫–æ–µ '—ç–Ω—Ç—Ä–æ–ø–∏—è' –≤ —Ç–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–µ?",
        "a": ["–º–µ—Ä–∞ –±–µ—Å–ø–æ—Ä—è–¥–∫–∞", "–º–µ—Ä–∞ —Ö–∞–æ—Å–∞", "—Å—Ç–µ–ø–µ–Ω—å –±–µ—Å–ø–æ—Ä—è–¥–∫–∞"]
    },
    {
        "q": "–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –æ–ø–µ—Ä—É '–ö–∞—Ä–º–µ–Ω'?",
        "a": ["–∂–æ—Ä–∂ –±–∏–∑–µ", "–±–∏–∑–µ"]
    },
    {
        "q": "–ö–∞–∫–æ–µ —Ö–∏–º–∏—á–µ—Å–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–æ–π –∂–∏–∑–Ω–∏ –Ω–∞ –ó–µ–º–ª–µ?",
        "a": ["—É–≥–ª–µ—Ä–æ–¥", "–∫–∞—Ä–±–æ–Ω"]
    },
    {
        "q": "–í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≥–æ—Ä–∞ –ö–∏–ª–∏–º–∞–Ω–¥–∂–∞—Ä–æ?",
        "a": ["—Ç–∞–Ω–∑–∞–Ω–∏—è"]
    },
    {
        "q": "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π –æ–∫–µ–∞–Ω –Ω–∞ –ó–µ–º–ª–µ?",
        "a": ["—Ç–∏—Ö–∏–π –æ–∫–µ–∞–Ω", "—Ç–∏—Ö–∏–π"]
    },
    {
        "q": "–ß—Ç–æ –∏–∑—É—á–∞–µ—Ç –Ω–∞—É–∫–∞ '—ç–ø–∏—Å—Ç–µ–º–æ–ª–æ–≥–∏—è'?",
        "a": ["—Ç–µ–æ—Ä–∏—è –ø–æ–∑–Ω–∞–Ω–∏—è", "—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è –∑–Ω–∞–Ω–∏—è"]
    },
    {
        "q": "–ö–∞–∫–æ–≤–∞ —Ñ–æ—Ä–º—É–ª–∞ –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞?",
        "a": ["œÄr¬≤", "–ø–∏ r –∫–≤–∞–¥—Ä–∞—Ç", "–ø–∏*r*r"]
    },
    {
        "q": "–ö—Ç–æ —Å–æ–∑–¥–∞–ª —Ç–µ–æ—Ä–∏—é –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏?",
        "a": ["—ç–π–Ω—à—Ç–µ–π–Ω", "–∞–ª—å–±–µ—Ä—Ç —ç–π–Ω—à—Ç–µ–π–Ω"]
    },
    {
        "q": "–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–≤–∞–Ω—Ç–æ–≤–∞—è –∑–∞–ø—É—Ç–∞–Ω–Ω–æ—Å—Ç—å?",
        "a": ["—Å–≤—è–∑—å —á–∞—Å—Ç–∏—Ü –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏", "–∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π"]
    },
]

async def quiz_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["quiz_index"] = 0
    question = quiz_questions[0]["q"]
    await update.message.reply_text(f"–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í–æ–ø—Ä–æ—Å 1:\n{question}")
    return ANSWER

async def quiz_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_answer = update.message.text.lower().strip()
    index = context.user_data.get("quiz_index", 0)
    correct_answers = quiz_questions[index]["a"]

    if any(user_answer == ans for ans in correct_answers):
        await update.message.reply_text("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
    else:
        correct = correct_answers[0].capitalize()
        await update.message.reply_text(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct}.")

    index += 1
    if index >= len(quiz_questions):
        await update.message.reply_text("üéâ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ.")
        return ConversationHandler.END

    context.user_data["quiz_index"] = index
    question = quiz_questions[index]["q"]
    await update.message.reply_text(f"–í–æ–ø—Ä–æ—Å {index+1}:\n{question}")
    return ANSWER

async def quiz_cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END
