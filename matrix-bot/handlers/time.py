from datetime import datetime
from geopy.geocoders import Nominatim
from timezonefinder import TimezoneFinder
import pytz
from telegram import Update
from telegram.ext import ContextTypes

geolocator = Nominatim(user_agent="telegram_time_bot")
tf = TimezoneFinder()

async def time_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /time <–≥–æ—Ä–æ–¥>\n–ü—Ä–∏–º–µ—Ä: /time –ú–æ—Å–∫–≤–∞")
        return

    city = " ".join(context.args)
    try:
        location = geolocator.geocode(city)
        if not location:
            await update.message.reply_text("‚ùó –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π.")
            return

        timezone_str = tf.timezone_at(lat=location.latitude, lng=location.longitude)
        if not timezone_str:
            await update.message.reply_text("‚è≥ –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É.")
            return

        timezone = pytz.timezone(timezone_str)
        local_time = datetime.now(timezone)
        time_formatted = local_time.strftime("%d.%m.%Y %H:%M")

        await update.message.reply_text(f"üïí –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –≥–æ—Ä–æ–¥–µ *{city.title()}*:\n{time_formatted}",
                                        parse_mode="Markdown")

    except Exception as e:
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

async def timezone_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /timezone <–≥–æ—Ä–æ–¥>\n–ü—Ä–∏–º–µ—Ä: /timezone –õ–æ–Ω–¥–æ–Ω"
        )
        return

    city = " ".join(context.args).strip(" ,.")
    try:
        location = geolocator.geocode(city)
        if not location:
            await update.message.reply_text("‚ùó –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π.")
            return

        timezone_str = tf.timezone_at(lat=location.latitude, lng=location.longitude)
        if not timezone_str:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É.")
            return

        await update.message.reply_text(
            f"üåç –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –¥–ª—è *{city.title()}*:\n`{timezone_str}`",
            parse_mode="Markdown"
        )

    except Exception as e:
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
